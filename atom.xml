<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>你当像鸟飞往你的山</title>
  <icon>https://www.gravatar.com/avatar/e257bbdaac96306c21415b0151221195</icon>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-10-22T06:18:49.892Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Xuefeng Tao</name>
    <email>tao642133424@163.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>RDD,DataFrame和DataSet的区别</title>
    <link href="http://yoursite.com/2020/10/22/RDD-DataFrame%E5%92%8CDataSet%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <id>http://yoursite.com/2020/10/22/RDD-DataFrame%E5%92%8CDataSet%E7%9A%84%E5%8C%BA%E5%88%AB/</id>
    <published>2020-10-22T06:14:47.000Z</published>
    <updated>2020-10-22T06:18:49.892Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;  RDD、DataFrame和DataSet是容易产生混淆的概念，必须对其相互之间对比，才可以知道其中异同。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;RDD和DataFrame&quot;&gt;&lt;a href=&quot;#RDD和DataFrame&quot; class=&quot;headerlink&quot; title=&quot;RDD和DataFrame&quot;&gt;&lt;/a&gt;RDD和DataFrame&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/2020/10/22/RDD-DataFrame%E5%92%8CDataSet%E7%9A%84%E5%8C%BA%E5%88%AB/image-20201022141655888.png&quot; alt=&quot;image-20201022141655888&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="RDD" scheme="http://yoursite.com/categories/RDD/"/>
    
      <category term="DataFrame" scheme="http://yoursite.com/categories/RDD/DataFrame/"/>
    
      <category term="DataSet" scheme="http://yoursite.com/categories/RDD/DataFrame/DataSet/"/>
    
    
      <category term="RDD" scheme="http://yoursite.com/tags/RDD/"/>
    
      <category term="DataFrame" scheme="http://yoursite.com/tags/DataFrame/"/>
    
      <category term="DataSet" scheme="http://yoursite.com/tags/DataSet/"/>
    
  </entry>
  
  <entry>
    <title>spark结构化流与streaming的区别</title>
    <link href="http://yoursite.com/2020/09/30/spark%E7%BB%93%E6%9E%84%E5%8C%96%E6%B5%81%E4%B8%8Estreaming%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <id>http://yoursite.com/2020/09/30/spark%E7%BB%93%E6%9E%84%E5%8C%96%E6%B5%81%E4%B8%8Estreaming%E7%9A%84%E5%8C%BA%E5%88%AB/</id>
    <published>2020-09-30T07:07:51.000Z</published>
    <updated>2020-09-30T07:10:43.623Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Spark-Streaming-DStreaming-VS-Spark-Structured-Streaming-区别比较-优劣势&quot;&gt;&lt;a href=&quot;#Spark-Streaming-DStreaming-VS-Spark-Structured-Streaming-区别比较-优劣势&quot; class=&quot;headerlink&quot; title=&quot;Spark Streaming(DStreaming) VS Spark Structured Streaming 区别比较 优劣势&quot;&gt;&lt;/a&gt;Spark Streaming(DStreaming) VS Spark Structured Streaming 区别比较 优劣势&lt;/h2&gt;&lt;h3 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h3&gt;&lt;p&gt;这篇博客主要记录Spark Streaming(DStreaming) 与 Spark Structured Streaming 之间的差别与优劣势。&lt;/p&gt;
&lt;p&gt;Apache Spark 在 2016 年的时候启动了 Structured Streaming 项目，一个基于 Spark SQL 的全新流计算引擎 Structured Streaming，让用户像编写批处理程序一样简单地编写高性能的流处理程序。经过一年多的改进和完善，目前 Structured Streaming 已经在 Databricks 内部和客户广泛使用。&lt;/p&gt;
&lt;p&gt;引用Spark commiter(gatorsmile)的话：“从Spark-2.X版本后，Spark streaming就进入维护模式，Spark streaming是低阶API，给码农用的，各种坑；Structured streaming是给人设计的API，简单易用。由于太忙，所以一直没有在官方文档上 更新说明信息”。而且可能 Spark 团队之后对 Spark Streaming 的维护可能越来越少。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Structured Streaming" scheme="http://yoursite.com/categories/Structured-Streaming/"/>
    
    
      <category term="spark" scheme="http://yoursite.com/tags/spark/"/>
    
      <category term="结构化流" scheme="http://yoursite.com/tags/%E7%BB%93%E6%9E%84%E5%8C%96%E6%B5%81/"/>
    
  </entry>
  
  <entry>
    <title>数学基础1:随机梯度下降法SGD</title>
    <link href="http://yoursite.com/2020/09/19/%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%801-%E9%9A%8F%E6%9C%BA%E6%A2%AF%E5%BA%A6%E4%B8%8B%E9%99%8D%E6%B3%95SGD/"/>
    <id>http://yoursite.com/2020/09/19/%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%801-%E9%9A%8F%E6%9C%BA%E6%A2%AF%E5%BA%A6%E4%B8%8B%E9%99%8D%E6%B3%95SGD/</id>
    <published>2020-09-19T01:28:15.000Z</published>
    <updated>2020-09-19T10:21:47.348Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;
        
      
    
    </summary>
    
    
      <category term="机器学习" scheme="http://yoursite.com/categories/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="机器学习" scheme="http://yoursite.com/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="数据基础" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>go 运行错误expected &#39;package&#39;, found &#39;EOF&#39;解决</title>
    <link href="http://yoursite.com/2020/09/16/go-%E8%BF%90%E8%A1%8C%E9%94%99%E8%AF%AFexpected-package-found-EOF-%E8%A7%A3%E5%86%B3/"/>
    <id>http://yoursite.com/2020/09/16/go-%E8%BF%90%E8%A1%8C%E9%94%99%E8%AF%AFexpected-package-found-EOF-%E8%A7%A3%E5%86%B3/</id>
    <published>2020-09-16T09:33:51.000Z</published>
    <updated>2020-09-16T09:34:47.282Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;
        
      
    
    </summary>
    
    
      <category term="Go" scheme="http://yoursite.com/categories/Go/"/>
    
    
      <category term="Go" scheme="http://yoursite.com/tags/Go/"/>
    
      <category term="语言" scheme="http://yoursite.com/tags/%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>Git远程分支</title>
    <link href="http://yoursite.com/2020/09/15/Git%E8%BF%9C%E7%A8%8B%E5%88%86%E6%94%AF/"/>
    <id>http://yoursite.com/2020/09/15/Git%E8%BF%9C%E7%A8%8B%E5%88%86%E6%94%AF/</id>
    <published>2020-09-15T01:45:29.000Z</published>
    <updated>2020-09-15T02:05:20.157Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Git-分支-远程分支&quot;&gt;&lt;a href=&quot;#Git-分支-远程分支&quot; class=&quot;headerlink&quot; title=&quot;Git 分支 - 远程分支&quot;&gt;&lt;/a&gt;Git 分支 - 远程分支&lt;/h1&gt;&lt;h2 id=&quot;远程分支&quot;&gt;&lt;a href=&quot;#远程分支&quot; class=&quot;headerlink&quot; title=&quot;远程分支&quot;&gt;&lt;/a&gt;远程分支&lt;/h2&gt;&lt;p&gt;远程引用是对远程仓库的引用（指针），包括分支、标签等等。 你可以通过 &lt;code&gt;git ls-remote &amp;lt;remote&amp;gt;&lt;/code&gt; 来显式地获得远程引用的完整列表， 或者通过 &lt;code&gt;git remote show &amp;lt;remote&amp;gt;&lt;/code&gt; 获得远程分支的更多信息。 然而，一个更常见的做法是利用远程跟踪分支。&lt;/p&gt;
&lt;p&gt;远程跟踪分支是远程分支状态的引用。它们是你无法移动的本地引用。一旦你进行了网络通信， Git 就会为你移动它们以精确反映远程仓库的状态。请将它们看做书签， 这样可以提醒你该分支在远程仓库中的位置就是你最后一次连接到它们的位置。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Git" scheme="http://yoursite.com/categories/Git/"/>
    
    
      <category term="Git" scheme="http://yoursite.com/tags/Git/"/>
    
      <category term="Git分支" scheme="http://yoursite.com/tags/Git%E5%88%86%E6%94%AF/"/>
    
      <category term="远程分支" scheme="http://yoursite.com/tags/%E8%BF%9C%E7%A8%8B%E5%88%86%E6%94%AF/"/>
    
  </entry>
  
  <entry>
    <title>Hive解析json方法</title>
    <link href="http://yoursite.com/2020/09/14/Hive%E8%A7%A3%E6%9E%90json%E6%96%B9%E6%B3%95/"/>
    <id>http://yoursite.com/2020/09/14/Hive%E8%A7%A3%E6%9E%90json%E6%96%B9%E6%B3%95/</id>
    <published>2020-09-14T10:36:53.000Z</published>
    <updated>2020-09-14T10:39:10.467Z</updated>
    
    <summary type="html">
    
      &lt;h4 id=&quot;1-get-json-object&quot;&gt;&lt;a href=&quot;#1-get-json-object&quot; class=&quot;headerlink&quot; title=&quot;1.get_json_object&quot;&gt;&lt;/a&gt;1.get_json_object&lt;/h4&gt;&lt;p&gt;底层日志经常会被储存为json字符串的形式，如果想获得各个维度的值，往往需要这个函数把对应的值取出来，具体用法为：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;get_json_object(action,&amp;#39;$.evt_id&amp;#39;) 取出1111027379533&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;此处假设需要解析的字段叫action，action的值如下：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;info_json&amp;quot;: &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&amp;quot;a&amp;quot;: &amp;#123;&amp;quot;b&amp;quot;: &amp;quot;300&amp;quot;,&amp;quot;c&amp;quot;: &amp;quot;15000&amp;quot;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;d&amp;quot;: &amp;quot;110000&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;e&amp;quot;: &amp;quot;小花&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;f&amp;quot;: &amp;quot;小芳&amp;quot;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot; token&amp;quot;: &amp;quot;1111027379533&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;同样如果要取出d所对应的110000这个值，可用嵌套的get_json_object方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; get_json_object(get_json_object(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#39;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;info_json&amp;quot;: &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&amp;quot;a&amp;quot;: &amp;#123;&amp;quot;b&amp;quot;: &amp;quot;300&amp;quot;,&amp;quot;c&amp;quot;: &amp;quot;15000&amp;quot;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;d&amp;quot;: &amp;quot;110000&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;e&amp;quot;: &amp;quot;小花&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;f&amp;quot;: &amp;quot;小芳&amp;quot;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;evt_id&amp;quot;: &amp;quot;1111027379533&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&amp;#39;,&amp;#39;$.info_json&amp;#39;),&amp;#39;$.d&amp;#39;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1234567891011121314151617181920&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Hive" scheme="http://yoursite.com/categories/Hive/"/>
    
    
      <category term="hive" scheme="http://yoursite.com/tags/hive/"/>
    
      <category term="解析json" scheme="http://yoursite.com/tags/%E8%A7%A3%E6%9E%90json/"/>
    
  </entry>
  
  <entry>
    <title>Sequel pro关闭后提示应用错误异常退出的应对方法</title>
    <link href="http://yoursite.com/2020/09/11/Sequel-pro%E5%85%B3%E9%97%AD%E5%90%8E%E6%8F%90%E7%A4%BA%E5%BA%94%E7%94%A8%E9%94%99%E8%AF%AF%E5%BC%82%E5%B8%B8%E9%80%80%E5%87%BA%E7%9A%84%E5%BA%94%E5%AF%B9%E6%96%B9%E6%B3%95/"/>
    <id>http://yoursite.com/2020/09/11/Sequel-pro%E5%85%B3%E9%97%AD%E5%90%8E%E6%8F%90%E7%A4%BA%E5%BA%94%E7%94%A8%E9%94%99%E8%AF%AF%E5%BC%82%E5%B8%B8%E9%80%80%E5%87%BA%E7%9A%84%E5%BA%94%E5%AF%B9%E6%96%B9%E6%B3%95/</id>
    <published>2020-09-11T10:13:33.000Z</published>
    <updated>2020-09-11T10:19:48.838Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;刚下载mac下的Sequel pro ，关闭会话总是会报错。&lt;/p&gt;
&lt;p&gt;尤其是想关闭一个回话的时候，整个程序退出还弹个错误对话框。&lt;/p&gt;
&lt;p&gt;应该是适配问题.&lt;/p&gt;
    
    </summary>
    
    
      <category term="Sequel pro" scheme="http://yoursite.com/categories/Sequel-pro/"/>
    
    
      <category term="工具" scheme="http://yoursite.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>Mysql Date_fromat时间函数</title>
    <link href="http://yoursite.com/2020/09/09/Mysql-Date-fromat%E6%97%B6%E9%97%B4%E5%87%BD%E6%95%B0/"/>
    <id>http://yoursite.com/2020/09/09/Mysql-Date-fromat%E6%97%B6%E9%97%B4%E5%87%BD%E6%95%B0/</id>
    <published>2020-09-09T01:57:25.000Z</published>
    <updated>2020-09-09T01:58:39.019Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;MySQL-DATE-FORMAT-函数&quot;&gt;&lt;a href=&quot;#MySQL-DATE-FORMAT-函数&quot; class=&quot;headerlink&quot; title=&quot;MySQL DATE_FORMAT() 函数&quot;&gt;&lt;/a&gt;MySQL DATE_FORMAT() 函数&lt;/h1&gt;&lt;h2 id=&quot;定义和用法&quot;&gt;&lt;a href=&quot;#定义和用法&quot; class=&quot;headerlink&quot; title=&quot;定义和用法&quot;&gt;&lt;/a&gt;定义和用法&lt;/h2&gt;&lt;p&gt;DATE_FORMAT() 函数用于以不同的格式显示日期/时间数据。&lt;/p&gt;
&lt;h3 id=&quot;语法&quot;&gt;&lt;a href=&quot;#语法&quot; class=&quot;headerlink&quot; title=&quot;语法&quot;&gt;&lt;/a&gt;语法&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;DATE_FORMAT(date,format)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;em&gt;date&lt;/em&gt; 参数是合法的日期。&lt;em&gt;format&lt;/em&gt; 规定日期/时间的输出格式。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Mysql" scheme="http://yoursite.com/categories/Mysql/"/>
    
    
      <category term="函数" scheme="http://yoursite.com/tags/%E5%87%BD%E6%95%B0/"/>
    
      <category term="时间函数" scheme="http://yoursite.com/tags/%E6%97%B6%E9%97%B4%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>实时数仓学习笔记_1</title>
    <link href="http://yoursite.com/2020/09/05/%E5%AE%9E%E6%97%B6%E6%95%B0%E4%BB%93%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1/"/>
    <id>http://yoursite.com/2020/09/05/%E5%AE%9E%E6%97%B6%E6%95%B0%E4%BB%93%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-1/</id>
    <published>2020-09-05T10:59:49.000Z</published>
    <updated>2020-09-05T10:59:49.370Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot;
        
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Hive SQl</title>
    <link href="http://yoursite.com/2020/09/01/Hive-SQl/"/>
    <id>http://yoursite.com/2020/09/01/Hive-SQl/</id>
    <published>2020-09-01T05:52:54.000Z</published>
    <updated>2020-09-02T09:59:37.350Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;添加分区&quot;&gt;&lt;a href=&quot;#添加分区&quot; class=&quot;headerlink&quot; title=&quot;添加分区&quot;&gt;&lt;/a&gt;添加分区&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;ALTER TABLE table_name ADD &lt;span class=&quot;title&quot;&gt;PARTITION&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(partCol = &lt;span class=&quot;string&quot;&gt;&#39;value1&#39;&lt;/span&gt;)&lt;/span&gt; location &#39;loc1&#39;&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;//示例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;ALTER TABLE table_name ADD IF NOT EXISTS &lt;span class=&quot;title&quot;&gt;PARTITION&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(dt=&lt;span class=&quot;string&quot;&gt;&#39;20130101&#39;&lt;/span&gt;)&lt;/span&gt; LOCATION &#39;/user/hadoop/warehouse/table_name/dt&lt;/span&gt;=&lt;span class=&quot;number&quot;&gt;20130101&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&#39;; //一次添加一个分区&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;ALTER TABLE page_view ADD PARTITION (dt=&#39;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;2008&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;08&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;08&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&#39;, country=&#39;&lt;/span&gt;us&lt;span class=&quot;string&quot;&gt;&#39;) location &#39;&lt;/span&gt;/path/to/us/part080808&lt;span class=&quot;string&quot;&gt;&#39; PARTITION (dt=&#39;&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;2008&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;08&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;09&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&#39;, country=&#39;&lt;/span&gt;us&lt;span class=&quot;string&quot;&gt;&#39;) location &#39;&lt;/span&gt;/path/to/us/part080809&lt;span class=&quot;string&quot;&gt;&#39;;  //一次添加多个分区&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Hive" scheme="http://yoursite.com/categories/Hive/"/>
    
    
      <category term="hive" scheme="http://yoursite.com/tags/hive/"/>
    
      <category term="sql" scheme="http://yoursite.com/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>Spark数据倾斜处理方法总结</title>
    <link href="http://yoursite.com/2020/08/24/Spark%E6%95%B0%E6%8D%AE%E5%80%BE%E6%96%9C%E5%A4%84%E7%90%86%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2020/08/24/Spark%E6%95%B0%E6%8D%AE%E5%80%BE%E6%96%9C%E5%A4%84%E7%90%86%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/</id>
    <published>2020-08-24T07:53:57.000Z</published>
    <updated>2020-08-24T08:06:38.617Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Spark性能优化之道——解决Spark数据倾斜（Data-Skew）的N种姿势&quot;&gt;&lt;a href=&quot;#Spark性能优化之道——解决Spark数据倾斜（Data-Skew）的N种姿势&quot; class=&quot;headerlink&quot; title=&quot;Spark性能优化之道——解决Spark数据倾斜（Data Skew）的N种姿势&quot;&gt;&lt;/a&gt;Spark性能优化之道——解决Spark数据倾斜（Data Skew）的N种姿势&lt;/h2&gt;&lt;p&gt;本文结合实例详细阐明了Spark数据倾斜的几种场景以及对应的解决方案，包括避免数据源倾斜，调整并行度，使用自定义Partitioner，使用Map侧Join代替Reduce侧Join，给倾斜Key加上随机前缀等。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;  本文转发自技术世界，原文链接&lt;a href=&quot;http://www.jasongj.com/spark/skew/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://www.jasongj.com/spark/skew/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h1&gt;&lt;p&gt;本文结合实例详细阐明了Spark数据倾斜的几种场景以及对应的解决方案，包括避免数据源倾斜，调整并行度，使用自定义Partitioner，使用Map侧Join代替Reduce侧Join，给倾斜Key加上随机前缀等。&lt;/p&gt;
&lt;h1 id=&quot;为何要处理数据倾斜（Data-Skew）&quot;&gt;&lt;a href=&quot;#为何要处理数据倾斜（Data-Skew）&quot; class=&quot;headerlink&quot; title=&quot;为何要处理数据倾斜（Data Skew）&quot;&gt;&lt;/a&gt;为何要处理数据倾斜（Data Skew）&lt;/h1&gt;&lt;h2 id=&quot;什么是数据倾斜&quot;&gt;&lt;a href=&quot;#什么是数据倾斜&quot; class=&quot;headerlink&quot; title=&quot;什么是数据倾斜&quot;&gt;&lt;/a&gt;什么是数据倾斜&lt;/h2&gt;&lt;p&gt;对Spark/Hadoop这样的大数据系统来讲，数据量大并不可怕，可怕的是数据倾斜。&lt;/p&gt;
&lt;p&gt;何谓数据倾斜？数据倾斜指的是，并行处理的数据集中，某一部分（如Spark或Kafka的一个Partition）的数据显著多于其它部分，从而使得该部分的处理速度成为整个数据集处理的瓶颈。&lt;/p&gt;
&lt;p&gt;对于分布式系统而言，理想情况下，随着系统规模（节点数量）的增加，应用整体耗时线性下降。如果一台机器处理一批大量数据需要120分钟，当机器数量增加到三时，理想的耗时为120 / 3 = 40分钟，如下图所示&lt;/p&gt;
&lt;p&gt;但是，上述情况只是理想情况，实际上将单机任务转换成分布式任务后，会有overhead，使得总的任务量较之单机时有所增加，所以每台机器的执行时间加起来比单台机器时更大。这里暂不考虑这些overhead，假设单机任务转换成分布式任务后，总任务量不变。&lt;br&gt;　　&lt;br&gt;但即使如此，想做到分布式情况下每台机器执行时间是单机时的，就必须保证每台机器的任务量相等。不幸的是，很多时候，任务的分配是不均匀的，甚至不均匀到大部分任务被分配到个别机器上，其它大部分机器所分配的任务量只占总得的小部分。比如一台机器负责处理80%的任务，另外两台机器各处理10%的任务，如下图所示&lt;br&gt;&lt;a href=&quot;http://www.jasongj.com/img/spark/spark1_skew/skew_time.png&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;img src=&quot;/2020/08/24/Spark%E6%95%B0%E6%8D%AE%E5%80%BE%E6%96%9C%E5%A4%84%E7%90%86%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/skew_time.png&quot; alt=&quot;unideal scale out&quot;&gt;&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Spark" scheme="http://yoursite.com/categories/Spark/"/>
    
    
      <category term="Spark" scheme="http://yoursite.com/tags/Spark/"/>
    
      <category term="数据倾斜" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E5%80%BE%E6%96%9C/"/>
    
  </entry>
  
  <entry>
    <title>Docker介绍</title>
    <link href="http://yoursite.com/2020/08/22/Docker%E4%BB%8B%E7%BB%8D/"/>
    <id>http://yoursite.com/2020/08/22/Docker%E4%BB%8B%E7%BB%8D/</id>
    <published>2020-08-22T03:59:19.000Z</published>
    <updated>2020-08-22T04:27:26.239Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;为了更好的理解 Docker 是什么，我们先来讲个故事：&lt;/p&gt;
&lt;p&gt;我需要盖一个房子，于是我搬石头、砍木头、画图纸、盖房子。一顿操作，终于把这个房子盖好了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2020/08/22/Docker%E4%BB%8B%E7%BB%8D/640.png&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Docker" scheme="http://yoursite.com/categories/Docker/"/>
    
    
      <category term="Docker" scheme="http://yoursite.com/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Spark结构化流-窗口操作与水印</title>
    <link href="http://yoursite.com/2020/08/20/Spark%E7%BB%93%E6%9E%84%E5%8C%96%E6%B5%81-%E7%AA%97%E5%8F%A3%E6%93%8D%E4%BD%9C%E4%B8%8E%E6%B0%B4%E5%8D%B0/"/>
    <id>http://yoursite.com/2020/08/20/Spark%E7%BB%93%E6%9E%84%E5%8C%96%E6%B5%81-%E7%AA%97%E5%8F%A3%E6%93%8D%E4%BD%9C%E4%B8%8E%E6%B0%B4%E5%8D%B0/</id>
    <published>2020-08-20T08:32:22.000Z</published>
    <updated>2020-08-20T09:03:54.300Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;事件时间窗口操作&quot;&gt;&lt;a href=&quot;#事件时间窗口操作&quot; class=&quot;headerlink&quot; title=&quot;事件时间窗口操作&quot;&gt;&lt;/a&gt;事件时间窗口操作&lt;/h3&gt;&lt;p&gt;滑动事件时间窗口上的聚合对于结构化流而言非常简单，并且与分组聚合非常相似。在分组聚合中，在用户指定的分组列中为每个唯一值维护聚合值（例如，计数）。在基于窗口的聚合的情况下，行事件时间所属的每个窗口都会维护聚合值。让我们通过插图来了解这一点。&lt;/p&gt;
&lt;p&gt;想象一下我们的&lt;a href=&quot;https://spark.apache.org/docs/2.2.0/structured-streaming-programming-guide.html#quick-example&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;快速示例&lt;/a&gt;已被修改，并且流现在包含行以及生成行的时间。而不是运行字数统计，我们希望在10分钟的窗口内对字数进行计数，每5分钟更新一次。也就是说，在10分钟窗口12:00-12：10、12：05-12：15、12：10-12:20等之间接收的单词中的单词计数。请注意，12：00-12:10表示数据12:00之后但12:10之前到达。现在，考虑在12:07收到的单词。此字应增加对应于两个窗口12:00-12:10和12:05-12:15的计数。因此，计数将通过分组键（即单词）和窗口（可以从事件时间计算）来索引。&lt;/p&gt;
&lt;p&gt;结果表如下所示。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2020/08/20/Spark%E7%BB%93%E6%9E%84%E5%8C%96%E6%B5%81-%E7%AA%97%E5%8F%A3%E6%93%8D%E4%BD%9C%E4%B8%8E%E6%B0%B4%E5%8D%B0/structured-streaming-window.png&quot; alt=&quot;窗口操作&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="spark-structured-streaming" scheme="http://yoursite.com/categories/spark-structured-streaming/"/>
    
    
      <category term="流处理" scheme="http://yoursite.com/tags/%E6%B5%81%E5%A4%84%E7%90%86/"/>
    
      <category term="spark" scheme="http://yoursite.com/tags/spark/"/>
    
      <category term="窗口操作" scheme="http://yoursite.com/tags/%E7%AA%97%E5%8F%A3%E6%93%8D%E4%BD%9C/"/>
    
      <category term="水印操作" scheme="http://yoursite.com/tags/%E6%B0%B4%E5%8D%B0%E6%93%8D%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>How to Install ClickHouse with RPM packages from Altinity&#39;s repo(s)</title>
    <link href="http://yoursite.com/2020/08/19/How-to-Install-ClickHouse-with-RPM-packages-from-Altinity-s-repo-s/"/>
    <id>http://yoursite.com/2020/08/19/How-to-Install-ClickHouse-with-RPM-packages-from-Altinity-s-repo-s/</id>
    <published>2020-08-19T11:24:41.000Z</published>
    <updated>2020-08-19T11:48:40.197Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;What-is-this&quot;&gt;&lt;a href=&quot;#What-is-this&quot; class=&quot;headerlink&quot; title=&quot;What is this&quot;&gt;&lt;/a&gt;What is this&lt;/h2&gt;&lt;p&gt;This is a detailed explanation on how to install ready-to-use ClickHouse RPMs from Altinity’s repos (either &lt;a href=&quot;https://packagecloud.io/Altinity/clickhouse&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;general repo&lt;/a&gt; or &lt;a href=&quot;https://packagecloud.io/Altinity/clickhouse-altinity-stable&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;stable repo&lt;/a&gt;) located on &lt;a href=&quot;https://packagecloud.io/Altinity&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;packagecloud.io&lt;/a&gt;. This is &lt;strong&gt;not&lt;/strong&gt; an instructions on how to build your own hand-made RPMs. However, if you need to build your own RPMs, there is a &lt;a href=&quot;https://github.com/Altinity/clickhouse-rpm&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;detailed explanation&lt;/a&gt; on how to build ClickHouse RPMs from sources with the help of Altinity’s &lt;a href=&quot;https://github.com/Altinity/clickhouse-rpm&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;RPM builder&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Introduction&quot;&gt;&lt;a href=&quot;#Introduction&quot; class=&quot;headerlink&quot; title=&quot;Introduction&quot;&gt;&lt;/a&gt;Introduction&lt;/h2&gt;&lt;h3 id=&quot;general-and-stable-repos&quot;&gt;&lt;a href=&quot;#general-and-stable-repos&quot; class=&quot;headerlink&quot; title=&quot;general and stable repos&quot;&gt;&lt;/a&gt;&lt;code&gt;general&lt;/code&gt; and &lt;code&gt;stable&lt;/code&gt; repos&lt;/h3&gt;&lt;p&gt;Altinity provides two repos:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;general&lt;/code&gt; &lt;a href=&quot;https://packagecloud.io/Altinity/clickhouse&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;repo&lt;/a&gt; with general ClickHouse releases.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;stable&lt;/code&gt; &lt;a href=&quot;https://packagecloud.io/Altinity/clickhouse-altinity-stable&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;repo&lt;/a&gt; with Altinity Stable ClickHouse releases.&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;
    
    </summary>
    
    
      <category term="ClickHouse" scheme="http://yoursite.com/categories/ClickHouse/"/>
    
    
      <category term="ClickHouse" scheme="http://yoursite.com/tags/ClickHouse/"/>
    
      <category term="安装" scheme="http://yoursite.com/tags/%E5%AE%89%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>Hbase学习2-系统架构与数据结构</title>
    <link href="http://yoursite.com/2020/08/17/Hbase%E5%AD%A6%E4%B9%A0-2-%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    <id>http://yoursite.com/2020/08/17/Hbase%E5%AD%A6%E4%B9%A0-2-%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</id>
    <published>2020-08-17T09:23:29.000Z</published>
    <updated>2020-08-17T09:28:53.761Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、基本概念&quot;&gt;&lt;a href=&quot;#一、基本概念&quot; class=&quot;headerlink&quot; title=&quot;一、基本概念&quot;&gt;&lt;/a&gt;一、基本概念&lt;/h2&gt;&lt;p&gt;一个典型的 Hbase Table 表如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2020/08/17/Hbase%E5%AD%A6%E4%B9%A0-2-%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/image-20200817172516439.png&quot; alt=&quot;image-20200817172516439&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Hbase" scheme="http://yoursite.com/categories/Hbase/"/>
    
    
      <category term="Hbase" scheme="http://yoursite.com/tags/Hbase/"/>
    
      <category term="学习笔记" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>spark-streaming学习1</title>
    <link href="http://yoursite.com/2020/08/17/spark-streaming%E5%AD%A6%E4%B9%A01/"/>
    <id>http://yoursite.com/2020/08/17/spark-streaming%E5%AD%A6%E4%B9%A01/</id>
    <published>2020-08-17T09:11:45.000Z</published>
    <updated>2020-08-17T09:15:35.509Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、流处理&quot;&gt;&lt;a href=&quot;#一、流处理&quot; class=&quot;headerlink&quot; title=&quot;一、流处理&quot;&gt;&lt;/a&gt;一、流处理&lt;/h2&gt;&lt;h3 id=&quot;1-1-静态数据处理&quot;&gt;&lt;a href=&quot;#1-1-静态数据处理&quot; class=&quot;headerlink&quot; title=&quot;1.1 静态数据处理&quot;&gt;&lt;/a&gt;1.1 静态数据处理&lt;/h3&gt;&lt;p&gt;在流处理之前，数据通常存储在数据库，文件系统或其他形式的存储系统中。应用程序根据需要查询数据或计算数据。这就是传统的静态数据处理架构。Hadoop 采用 HDFS 进行数据存储，采用 MapReduce 进行数据查询或分析，这就是典型的静态数据处理架构。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2020/08/17/spark-streaming%E5%AD%A6%E4%B9%A01/image-20200817171353524.png&quot; alt=&quot;image-20200817171353524&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="spark streaming" scheme="http://yoursite.com/categories/spark-streaming/"/>
    
    
      <category term="流处理" scheme="http://yoursite.com/tags/%E6%B5%81%E5%A4%84%E7%90%86/"/>
    
      <category term="spark" scheme="http://yoursite.com/tags/spark/"/>
    
  </entry>
  
  <entry>
    <title>学习知乎实时数仓实践及架构演进</title>
    <link href="http://yoursite.com/2020/08/12/%E5%AD%A6%E4%B9%A0%E7%9F%A5%E4%B9%8E%E5%AE%9E%E6%97%B6%E6%95%B0%E4%BB%93%E5%AE%9E%E8%B7%B5%E5%8F%8A%E6%9E%B6%E6%9E%84%E6%BC%94%E8%BF%9B/"/>
    <id>http://yoursite.com/2020/08/12/%E5%AD%A6%E4%B9%A0%E7%9F%A5%E4%B9%8E%E5%AE%9E%E6%97%B6%E6%95%B0%E4%BB%93%E5%AE%9E%E8%B7%B5%E5%8F%8A%E6%9E%B6%E6%9E%84%E6%BC%94%E8%BF%9B/</id>
    <published>2020-08-12T02:49:20.000Z</published>
    <updated>2020-08-12T03:29:14.864Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;“数据智能” (Data Intelligence) 有一个必须且基础的环节，就是数据仓库的建设，同时，数据仓库也是公司数据发展到一定规模后必然会提供的一种基础服务。从智能商业的角度来讲，数据的结果代表了用户的反馈，获取结果的及时性就显得尤为重要，快速的获取数据反馈能够帮助公司更快的做出决策，更好的进行产品迭代，实时数仓在这一过程中起到了不可替代的作用。&lt;/p&gt;
&lt;p&gt;本文主要讲述知乎的实时数仓实践以及架构的演进，这包括以下几个方面&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;实时数仓 1.0 版本，主题： ETL 逻辑实时化，技术方案：Spark Streaming。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;实时数仓 2.0 版本，主题：数据分层，指标计算实时化，技术方案：Flink Streaming。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;实时数仓未来展望：Streaming SQL 平台化，元信息管理系统化，结果验收自动化。&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;
    
    </summary>
    
    
      <category term="实时数仓" scheme="http://yoursite.com/categories/%E5%AE%9E%E6%97%B6%E6%95%B0%E4%BB%93/"/>
    
    
      <category term="学习笔记" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
      <category term="实时计算" scheme="http://yoursite.com/tags/%E5%AE%9E%E6%97%B6%E8%AE%A1%E7%AE%97/"/>
    
      <category term="实时数仓" scheme="http://yoursite.com/tags/%E5%AE%9E%E6%97%B6%E6%95%B0%E4%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>实时数仓</title>
    <link href="http://yoursite.com/2020/08/11/%E5%AE%9E%E6%97%B6%E6%95%B0%E4%BB%93/"/>
    <id>http://yoursite.com/2020/08/11/%E5%AE%9E%E6%97%B6%E6%95%B0%E4%BB%93/</id>
    <published>2020-08-11T03:47:16.000Z</published>
    <updated>2020-08-11T05:43:03.618Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;0x00-数仓为什么要实时&quot;&gt;&lt;a href=&quot;#0x00-数仓为什么要实时&quot; class=&quot;headerlink&quot; title=&quot;|0x00 数仓为什么要实时&quot;&gt;&lt;/a&gt;|0x00 数仓为什么要实时&lt;/h3&gt;&lt;p&gt;去年开始，&lt;font color=&quot;red&quot;&gt;实时数仓&lt;/font&gt; 的概念突然火了。也许是&lt;strong&gt;传统的离线数仓搞了很多年&lt;/strong&gt;，技术相对成熟了，因此大家都把注意力放到了&lt;strong&gt;挑战性更高&lt;/strong&gt;的实时上来；也许是随着&lt;strong&gt;存量市场竞争&lt;/strong&gt;的到来，对于速度的要求越来越快，&lt;strong&gt;T+1已经不能满足数据的获取要求了&lt;/strong&gt;，实时的构建需求也就应运而生了。 &lt;/p&gt;
&lt;p&gt;&lt;font color=&quot;red&quot;&gt;总之，时效性开始大于分析性&lt;/font&gt; 。&lt;/p&gt;
&lt;p&gt;文本简单介绍实时数仓的一些基础理论，更系统性的理论，仍然行业需要更大范围的应用和总结。总之，这是一块&lt;strong&gt;有前景&lt;/strong&gt;的&lt;strong&gt;新领域&lt;/strong&gt;，值得探索。&lt;/p&gt;
    
    </summary>
    
    
      <category term="实时数仓" scheme="http://yoursite.com/categories/%E5%AE%9E%E6%97%B6%E6%95%B0%E4%BB%93/"/>
    
    
      <category term="数仓" scheme="http://yoursite.com/tags/%E6%95%B0%E4%BB%93/"/>
    
      <category term="实时" scheme="http://yoursite.com/tags/%E5%AE%9E%E6%97%B6/"/>
    
  </entry>
  
  <entry>
    <title>Hbase学习笔记-1</title>
    <link href="http://yoursite.com/2020/08/04/Hbase%E7%AC%94%E8%AE%B0-1/"/>
    <id>http://yoursite.com/2020/08/04/Hbase%E7%AC%94%E8%AE%B0-1/</id>
    <published>2020-08-04T11:47:45.000Z</published>
    <updated>2020-08-07T10:30:45.607Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一-Hadoop的局限性&quot;&gt;&lt;a href=&quot;#一-Hadoop的局限性&quot; class=&quot;headerlink&quot; title=&quot;一.Hadoop的局限性&quot;&gt;&lt;/a&gt;一.Hadoop的局限性&lt;/h2&gt;&lt;p&gt;Hbase是一个构建在Hadoop文件系统之上的面向列(列族)的数据库管理系统&lt;/p&gt;
&lt;img src=&quot;/2020/08/04/Hbase%E7%AC%94%E8%AE%B0-1/image-20200804194929543.png&quot; alt=&quot;image-20200804194929543&quot; style=&quot;zoom:50%;&quot;&gt;
    
    </summary>
    
    
      <category term="Hbase" scheme="http://yoursite.com/categories/Hbase/"/>
    
    
      <category term="Hbase" scheme="http://yoursite.com/tags/Hbase/"/>
    
      <category term="学习笔记" scheme="http://yoursite.com/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>MapReduce小文件优化问题</title>
    <link href="http://yoursite.com/2020/08/04/MapReduce%E5%B0%8F%E6%96%87%E4%BB%B6%E4%BC%98%E5%8C%96%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2020/08/04/MapReduce%E5%B0%8F%E6%96%87%E4%BB%B6%E4%BC%98%E5%8C%96%E9%97%AE%E9%A2%98/</id>
    <published>2020-08-04T11:42:41.000Z</published>
    <updated>2020-08-04T11:45:19.506Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;默认情况下，TextInputformat对任务的切片机智是按文件规划切片，不管文件多小，都会是一个单独的切片，都是交给一个maptask，如果有多个小文件，就会产生大量的maptask，处理效率底下。&lt;/p&gt;
    
    </summary>
    
    
      <category term="MapReduce" scheme="http://yoursite.com/categories/MapReduce/"/>
    
    
      <category term="优化" scheme="http://yoursite.com/tags/%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
</feed>
